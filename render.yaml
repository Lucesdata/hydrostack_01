services:
  # ────────────────────────────────────────────
  # Front-end (Next.js)
  # ────────────────────────────────────────────
  - type: web
    name: frontend
    runtime: node
    buildCommand: yarn install && yarn build
    startCommand: yarn start -p 3000
    autoDeploy: true
    envVars:
      # URL externa del back-end - Render proporcionará algo como
      # https://api-xxxxx.onrender.com
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web          # destino: servicio web
          name: api          # nombre exacto del back-end
          property: host     # host externo (sin protocolo)
        isPublic: true

  # ────────────────────────────────────────────
  # API (NestJS)
  # ────────────────────────────────────────────
  - type: web
    name: api
    env: docker
    dockerfilePath: ./apps/backend/Dockerfile
    autoDeploy: true
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: db
          property: connectionString   # cadena completa

  # ────────────────────────────────────────────
  # Motor de cálculos (FastAPI)
  # ────────────────────────────────────────────
  - type: web
    name: calc-api
    env: docker
    dockerfilePath: ./apps/calc-api/Dockerfile
    autoDeploy: true
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: db
          property: connectionString

# ──────────────────────────────────────────────
# Base de datos PostgreSQL
# ──────────────────────────────────────────────
databases:
  - name: db
    plan: standard          # «free» sirve para pruebas; «standard» para MVP
    databaseName: hydrostack
    user: hydrostack
